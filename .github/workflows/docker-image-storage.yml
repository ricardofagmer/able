name: Deploy Storage Service

on:
    push:
        branches:
            - dev
        paths:
            - 'apps/api/storage/**'
            - 'docker/Storage.Dockerfile'
            - 'migrations/**'
            - 'k8s/storage-deployment-api.yml'
            - '.github/workflows/docker-image-storage.yml'
            - 'libs/**'
    workflow_dispatch:

concurrency:
    group: storage-service-deploy-${{ github.ref }}
    cancel-in-progress: false

env:
    ENVIRONMENT: test
    KUBECONFIG64: ${{ secrets.KUBECONFIG64 }}
    NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
    deploy-storage-service:
        runs-on: ubuntu-latest
        environment: test
        name: dev
        env:
            IMAGE_NAME: gcr.io/able-dev/storage:v${{ github.run_number }}
            RELEASE: storage-service-test
            IMAGE_TAG: v${{ github.run_number }}
            NAMESPACE: able-dev

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_CREDENTIALS }}

            - name: Setup Google Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ vars.GCP_PROJECT_ID }}

            - name: Configure Docker for Google Container Registry
              run: gcloud endpoint configure-docker gcr.io --quiet

            - name: Build Docker image
              run: docker build -f docker/Storage.Dockerfile --build-arg MODE=production -t $IMAGE_NAME .

            - name: Push Docker image
              run: docker push $IMAGE_NAME

            - name: Set up kubectl
              uses: azure/setup-kubectl@v3
              with:
                  version: 'latest'

            - name: Install gke-gcloud-endpoint-plugin
              run: |
                  gcloud components install gke-gcloud-auth-plugin
                  export USE_GKE_GCLOUD_AUTH_PLUGIN=True

            - name: Decode and configure kubeconfig
              run: |
                  mkdir -p $HOME/.kube
                  echo "$KUBECONFIG64" | base64 -d > $HOME/.kube/config

            - name: Create or update GCR image pull secret
              run: |
                  kubectl create secret docker-registry gcr-json-key \
                    --docker-server=gcr.io \
                    --docker-username=_json_key \
                    --docker-password='${{ secrets.GCP_CREDENTIALS }}' \
                    --docker-email=github-actions@example.com \
                    --namespace=$NAMESPACE \
                    --dry-run=client -o yaml | kubectl apply -f -

            - name: Replace image tag in deployment file
              run: |
                  sed "s|TAG|v${{ github.run_number }}|g" k8s/storage-deployment-api.yml > k8s/storage-deployment-api-temp.yml

            - name: Deploy to Kubernetes
              run: |
                  kubectl apply -f k8s/values-secret-production.yml --validate=false
                  kubectl apply -f k8s/values-production.yml --validate=false
                  kubectl apply -f k8s/storage-deployment-api-temp.yml --validate=false
                  kubectl apply -f k8s/storage-service-api.yml
