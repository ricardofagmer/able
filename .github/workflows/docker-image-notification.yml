name: Deploy Notification Service

on:
    push:
        branches: [ main, dev ]
        paths:
            - 'apps/api/notification/**'
            - 'docker/Notification.Dockerfile'
            - 'migrations/**'
            - 'k8s/notification-deployment-api.yml'
            - '.github/workflows/docker-image-notification.yml'
            - 'libs/**'
    workflow_dispatch:

concurrency:
    group: notification-service-deploy-${{ github.ref }}
    cancel-in-progress: false

env:
    ENVIRONMENT: test
    KUBECONFIG64: ${{ secrets.KUBECONFIG64 }}
    NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
    deploy-notification-service:
        runs-on: ubuntu-latest
        environment: test
        name: dev
        env:
            IMAGE_NAME: gcr.io/${{ vars.GCP_PROJECT_ID }}/notification:v${{ github.run_number }}
            RELEASE: notification-service-test
            IMAGE_TAG: v${{ github.run_number }}
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Authenticate to Google Cloud
                uses: google-github-actions/auth@v2
                with:
                    credentials_json: ${{ secrets.GCP_CREDENTIALS }}

            -   name: Setup Google Cloud SDK
                uses: google-github-actions/setup-gcloud@v2
                with:
                    project_id: ${{ vars.GCP_PROJECT_ID }}

            -   name: Configure Docker for Google Container Registry
                run: gcloud endpoint configure-docker gcr.io --quiet

            -   name: Login to GitHub Container Registry
                uses: docker/login-action@v3
                with:
                    registry: ghcr.io
                    username: ${{ secrets.REGISTRY_USERNAME }}
                    password: ${{ secrets.REGISTRY_PASSWORD }}

            -   name: Build Docker image
                run: docker build -f docker/Notification.Dockerfile --build-arg MODE=production -t $IMAGE_NAME .

            -   name: Push Docker image
                run: docker push $IMAGE_NAME

            -   name: Set up kubectl
                uses: azure/setup-kubectl@v3
                with:
                    version: 'latest'

            -   name: Install gke-gcloud-endpoint-plugin
                run: |
                    gcloud components install gke-gcloud-auth-plugin
                    export USE_GKE_GCLOUD_AUTH_PLUGIN=True

            -   name: Decode and configure kubeconfig
                run: |
                    mkdir -p $HOME/.kube
                    echo "$KUBECONFIG64" | base64 -d > $HOME/.kube/config

            -   name: Create or update GCR image pull secret
                run: |
                    kubectl create secret docker-registry gcr-json-key \
                      --docker-server=gcr.io \
                      --docker-username=_json_key \
                      --docker-password='${{ secrets.GCP_CREDENTIALS }}' \
                      --docker-email=github-actions@example.com \
                      --namespace=$NAMESPACE \
                      --dry-run=client -o yaml | kubectl apply -f -

            -   name: Replace image tag in deployment file
                run: |
                    sed "s|TAG|v${{ github.run_number }}|g" k8s/notification-deployment-api.yml > k8s/notification-deployment-api-temp.yml

            -   name: Deploy to Kubernetes
                run: |
                    kubectl apply -f k8s/values-secret-production.yml --validate=false
                    kubectl apply -f k8s/values-production.yml --validate=false
                    kubectl apply -f k8s/notification-deployment-api-temp.yml --validate=false
                    kubectl apply -f k8s/notification-service-api.yml
