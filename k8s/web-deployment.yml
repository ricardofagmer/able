apiVersion: apps/v1
kind: Deployment
metadata:
    name: web-microservice
    namespace: able-dev
    labels:
        app: web-microservice
spec:
    replicas: 1
    selector:
        matchLabels:
            app: web-microservice
    template:
        metadata:
            labels:
                app: web-microservice
            annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8080"
        spec:
            imagePullSecrets:
                -   name: gcr-json-key
            containers:
                - name: web-microservice
                  image: gcr.io/able-dev/web:TAG
                  imagePullPolicy: Always
                  ports:
                      - containerPort: 8080
                        name: http
                        protocol: TCP
                  volumeMounts:
                  - name: nginx-tmp-volume
                    mountPath: /tmp
                  envFrom:
                      - configMapRef:
                            name: app-service-config
                      - secretRef:
                            name: app-service-secrets
                  resources:
                      limits:
                          cpu: "500m"
                          memory: "512Mi"
                      requests:
                          cpu: "200m"
                          memory: "256Mi"
                  livenessProbe:
                      httpGet:
                          path: /
                          port: 8080
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /
                          port: 8080
                      initialDelaySeconds: 5
                      periodSeconds: 10
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  securityContext:
                      allowPrivilegeEscalation: false
                      runAsNonRoot: true
                      readOnlyRootFilesystem: true
            volumes:
            - name: nginx-tmp-volume
              emptyDir: { }
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            securityContext:
                runAsUser: 10001
                runAsGroup: 10001
                fsGroup: 10001
            schedulerName: default-scheduler
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
    revisionHistoryLimit: 10
    progressDeadlineSeconds: 600
