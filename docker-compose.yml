version: '3.6'

volumes:
    pg_data:
    zookeeper_data:
        driver: local
    kafka_data:
        driver: local

services:
    postgres:
        image: postgres:16.0-alpine
        volumes:
            - pg_data:/var/lib/postgresql/data
        ports:
            - "5411:5432"
        environment:
            POSTGRES_USER: able
            POSTGRES_PASSWORD: able
            POSTGRES_DB: able

    redis:
        image: redis:alpine
        command: redis-server --requirepass able
        ports:
            - "6379:6379"

    zookeeper:
        image: bitnami/zookeeper
        ports:
            - "2181:2181"
        hostname: zookeeper
        volumes:
            - zookeeper_data:/bitnami/zookeeper
        environment:
            ALLOW_ANONYMOUS_LOGIN: 'true'

    kafka:
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
            - "29092:29092"
        hostname: kafka
        restart: unless-stopped
        volumes:
            - kafka_data:/bitnami/kafka
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
            ALLOW_PLAINTEXT_LISTENER: 'yes'
            KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
            KAFKA_CFG_ADVERTISED_LISTENERS:
             PLAINTEXT://127.0.0.1:9092,PLAINTEXT_HOST://127.0.0.1:29092
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_LOG_RETENTION_MS: 86400000
            KAFKAJS_NO_PARTITIONER_WARNING: 1
        depends_on:
            - zookeeper
        healthcheck:
            test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
            interval: 10s
            timeout: 5s
            retries: 5

    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        restart: unless-stopped
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
            DYNAMIC_CONFIG_ENABLED: 'true'
        depends_on:
            - kafka

    mailhog:
        image: mailhog/mailhog
        restart: always
        ports:
            - "1025:1025"
            - "8025:8025"
